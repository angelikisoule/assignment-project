<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
	<modelVersion>4.0.0</modelVersion>

	<groupId>com.soulee</groupId>
	<artifactId>assignment-project</artifactId>
	<version>0.0.1-SNAPSHOT</version>
	<packaging>jar</packaging>

	<name>assignment-project</name>
	<description>Demo project for Spring Boot</description>

	<parent>
		<groupId>org.springframework.boot</groupId>
		<artifactId>spring-boot-starter-parent</artifactId>
		<version>2.0.4.RELEASE</version>
		<relativePath /> <!-- lookup parent from repository -->
	</parent>

	<properties>
		<project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
		<project.reporting.outputEncoding>UTF-8</project.reporting.outputEncoding>
		<java.version>1.8</java.version>

		<db.module.url>jdbc:postgresql://${db.host}:${db.port}/${db.module.database.name}</db.module.url>
		<db.module.database.name>movies</db.module.database.name>
		<db.module.userId>movies_postgres</db.module.userId>

		<db.root.url>jdbc:postgresql://${db.host}:${db.port}/postgres</db.root.url>
		<db.root.userId>postgres</db.root.userId>

		<init.database.skip>true</init.database.skip>
		<db.create_db_extra />
	</properties>

	<dependencies>
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-actuator</artifactId>
		</dependency>
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-data-jpa</artifactId>
		</dependency>
		<!-- <dependency> -->
		<!-- <groupId>org.springframework.boot</groupId> -->
		<!-- <artifactId>spring-boot-starter-security</artifactId> -->
		<!-- </dependency> -->
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-web</artifactId>
		</dependency>
		
		<dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-starter-data-rest</artifactId>
        </dependency>

		<dependency>
			<groupId>org.postgresql</groupId>
			<artifactId>postgresql</artifactId>
			<scope>runtime</scope>
		</dependency>
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-test</artifactId>
			<scope>test</scope>
		</dependency>
		<dependency>
			<groupId>org.springframework.security</groupId>
			<artifactId>spring-security-test</artifactId>
			<scope>test</scope>
		</dependency>

		<!-- Swagger ui / swagger-ui.html -->
		<dependency>
			<groupId>io.springfox</groupId>
			<artifactId>springfox-swagger2</artifactId>
			<version>2.8.0</version>
			<scope>compile</scope>
		</dependency>
		<dependency>
			<groupId>io.springfox</groupId>
			<artifactId>springfox-swagger-ui</artifactId>
			<version>2.8.0</version>
			<scope>compile</scope>
		</dependency>
	</dependencies>
	
		<pluginRepositories>
		<pluginRepository>
			<id>codehaus-snapshots</id>
			<name>Codehaus Snapshots</name>
			<url>http://nexus.codehaus.org/snapshots/</url>
			<releases>
				<enabled>false</enabled>
			</releases>
		</pluginRepository>
	</pluginRepositories>

	<build>
		<plugins>
			<plugin>
				<groupId>org.springframework.boot</groupId>
				<artifactId>spring-boot-maven-plugin</artifactId>
			</plugin>
			<!-- creates database user and schema, no schema objects (tables, etc) -->
			<plugin>
				<groupId>org.codehaus.mojo</groupId>
				<artifactId>sql-maven-plugin</artifactId>
				<version>1.5</version>
				<dependencies>
					<dependency>
						<groupId>postgresql</groupId>
						<artifactId>postgresql</artifactId>
						<version>9.1-901-1.jdbc4</version>
					</dependency>
				</dependencies>
				<configuration>
					<driver>org.postgresql.Driver</driver>
					<url>${db.root.url}</url>
					<username>${db.root.userId}</username>
					<password>${db.root.password}</password>
					<enableFiltering>true</enableFiltering>
					<autocommit>true</autocommit>
					<orderFile>ascending</orderFile>
				</configuration>
				<executions>
					<!-- need to connect with root user to create database and module user -->
					<execution>
						<id>init-db</id>
						<phase>validate</phase>
						<goals>
							<goal>execute</goal>
						</goals>
						<configuration>
							<sqlCommand>
								DROP DATABASE IF EXISTS ${db.module.database.name};
								DROP USER IF EXISTS ${db.module.userId};
								CREATE USER
								${db.module.userId} LOGIN PASSWORD '${db.module.password}'
								NOCREATEDB NOCREATEROLE NOREPLICATION VALID UNTIL 'infinity';
								CREATE DATABASE ${db.module.database.name} WITH ENCODING='UTF8'
								${db.create_db_extra} OWNER=${db.module.userId} CONNECTION
								LIMIT=-1;
							</sqlCommand>
							<skip>${init.database.skip}</skip>
						</configuration>
						<inherited>false</inherited>
					</execution>

					<!-- need to connect with module user in order to create schema in module 
						database -->
					<execution>
						<id>init-db-schema</id>
						<phase>validate</phase>
						<goals>
							<goal>execute</goal>
						</goals>
						<configuration>
							<url>${db.module.url}</url>
							<username>${db.module.userId}</username>
							<password>${db.module.password}</password>
							<sqlCommand>
								CREATE SCHEMA movies AUTHORIZATION
								${db.module.userId};
							</sqlCommand>
							<skip>${init.database.skip}</skip>
						</configuration>
						<inherited>false</inherited>
					</execution>
				</executions>
			</plugin>

			<!-- executes the sql scripts that create the database objects -->
			<plugin>
				<groupId>org.flywaydb</groupId>
				<artifactId>flyway-maven-plugin</artifactId>
				<configuration>
					<driver>org.postgresql.Driver</driver>
					<url>${db.module.url}</url>
					<user>${db.module.userId}</user>
					<password>${db.module.password}</password>
					<sqlMigrationSuffix>.Final.sql</sqlMigrationSuffix>
					<encoding>UTF-8</encoding>
					<table>DB_MIGRATION_HISTORY</table>
					<outOfOrder>true</outOfOrder>
					<schemas>
						<schema>movies</schema>
					</schemas>
				</configuration>
				<dependencies>
					<dependency>
						<groupId>postgresql</groupId>
						<artifactId>postgresql</artifactId>
						<version>9.1-901-1.jdbc4</version>
					</dependency>
				</dependencies>
			</plugin>
		</plugins>
	</build>


</project>
